trigger:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

jobs:
- job: 'Linux'
  pool:
    vmImage: 'ubuntu-latest'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - script: |
        sudo apt-get install libboost-dev
        wget https://github.com/pybind/pybind11/archive/v2.5.0.tar.gz && tar xfz v2.5.0.tar.gz && cd pybind11-2.5.0 && mkdir build && cd build && cmake .. -DPYBIND11_TEST=OFF && sudo make -j4 install
      displayName: "System deps"

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: cd js; yarn
      displayName: 'Install JS dependencies'

    - script: |
        python -m pip install --upgrade pip numpy pyarrow==0.15.1 cpplint
        pip install -e .[dev]
      displayName: 'Install Python Dependencies'

    - script: |
        make lintpy
      displayName: 'Lint Python'

    - script: |
        make lintjs
      displayName: 'Lint JS'

    - script: |
        make tests
      displayName: 'Test'

    - script: |
        make annotate
      displayName: 'Type Annotate'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/*coverage.xml'

- job: 'Mac'
  pool:
    vmImage: 'macos-10.14'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - script: |
        brew install boost cmake pybind11
      displayName: "System deps"

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: cd js; yarn
      displayName: 'Install JS dependencies'

    - script: |
        python -m pip install --upgrade pip numpy pyarrow==0.15.1 cpplint
        pip install -e .[dev]
      displayName: 'Install Python Dependencies'

    - script: |
        make lintpy
      displayName: 'Lint Python'

    - script: |
        make lintjs
      displayName: 'Lint JS'

    - script: |
        make lintcpp
      displayName: 'Lint C++'

    - script: |
        make tests
      displayName: 'Test'

    - script: |
        make annotate
      displayName: 'Type Annotate'

    - script: |
        make testpycpp
      displayName: 'Test C++'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/*coverage.xml'

- job: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        which python > python.txt
        set /p PYTHON=<python.txt
        ln -s %PYTHON% %PYTHON%$(python.version)
        python --version
        which python$(python.version)
      displayName: "Which python"

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: cd js; yarn
      displayName: 'Install JS dependencies'

    - script: |
        python -m pip install --upgrade pip numpy pyarrow==0.15.1 cpplint
        pip install -e .[dev]
      displayName: 'Install Python Dependencies'
      env:
        # Set `BOOST_ROOT` manually, as `BOOST_ROOT` is removed in the VM:
        # https://github.com/actions/virtual-environments/issues/687
        # 06/18/2020 - seems like boost got moved to `x86_64` inside
        # the boost folder, which broke builds for a bit.
        BOOST_ROOT: "C:/hostedtoolcache/windows/Boost/1.69.0/x86_64/"
        BOOST_INCLUDEDIR: "C:/hostedtoolcache/windows/Boost/1.69.0/x86_64/include"
        BOOST_LIBRARYDIR: "C:/hostedtoolcache/windows/Boost/1.69.0/x86_64/libs"

    - script: |
        make lintpy
      displayName: 'Lint Python'

    - script: |
        make lintjs
      displayName: 'Lint JS'

    - script: |
        make lintcpp
      displayName: 'Lint C++'

    - script: |
        make tests
      displayName: 'Test'

    - script: |
        make annotate
      displayName: 'Type Annotate'

    - script: |
        make testpycpp
      displayName: 'Test C++'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/*coverage.xml'

# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
name: Publish Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]
        node-version: [12.x]
        
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install yarn
      run: npm install -g yarn

    - name: Install system dependencies
      run: |
        sudo apt-get install libboost-dev
        wget https://github.com/pybind/pybind11/archive/v2.5.0.tar.gz && tar xfz v2.5.0.tar.gz && cd pybind11-2.5.0 && mkdir build && cd build && cmake .. -DPYBIND11_TEST=OFF && sudo make -j4 install
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Install system dependencies
      run: |
        brew install boost cmake pybind11
      if: ${{ matrix.os == 'macos-latest' }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine numpy pyarrow>=1. cpplint
        python -m pip install -e .[dev]
        cd js; yarn

    - name: Lint Python
      run: |
        make lintpy

    - name: Lint JS
      run: |
        make lintjs

    - name: Lint C++
      run: |
        make lintcpp

    - name: Type Annotate
      run: |
        make annotate

    - name: Test
      run: |
        make tests

    - name: Test C++
      run: |
        make testpycpp

    - name: Live tests
      run: |
        make testruns

    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        make publish
